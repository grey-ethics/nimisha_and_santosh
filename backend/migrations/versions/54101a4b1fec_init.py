"""init

Revision ID: 54101a4b1fec
Revises: 
Create Date: 2025-08-19 03:57:49.975199
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '54101a4b1fec'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'REGIONAL_MANAGER', 'BRANCH_MANAGER', 'PATIENT', name='role_enum', create_constraint=True), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('must_change_password', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refresh_token_version', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('actor_user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DEACTIVATE', name='audit_action'), nullable=False),
    sa.Column('entity_type', sa.String(length=64), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('diff_json', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip', postgresql.INET(), nullable=True),
    sa.ForeignKeyConstraint(['actor_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('region_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('region_id', 'name', name='uq_branch_region_name')
    )
    op.create_table('regional_manager_profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('region_id', sa.UUID(), nullable=False),
    sa.Column('notes', sa.String(length=2000), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('branch_manager_profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('branch_id', sa.UUID(), nullable=False),
    sa.Column('notes', sa.String(length=2000), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('patient_profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('branch_id', sa.UUID(), nullable=False),
    sa.Column('assigned_bm_user_id', sa.UUID(), nullable=False),
    sa.Column('rm_approval', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('enrollment_date', sa.Date(), nullable=True),
    sa.Column('transplant_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.String(length=2000), nullable=True),
    sa.Column('mrn', sa.String(length=64), nullable=True),
    sa.Column('blood_group', sa.String(length=8), nullable=True),
    sa.Column('donor_type', sa.Enum('LIVING', 'DECEASED', 'UNKNOWN', name='donor_type_enum', create_constraint=True), nullable=True),
    sa.Column('primary_center', sa.String(length=200), nullable=True),
    sa.Column('treating_physician', sa.String(length=200), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', 'UNKNOWN', name='gender_enum', create_constraint=True), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=200), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=32), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='patient_status_enum', create_constraint=True), server_default=sa.text("'ACTIVE'"), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_bm_user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('branch_id', 'mrn', name='uq_patient_mrn_in_branch')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('patient_profiles')
    op.drop_table('branch_manager_profiles')
    op.drop_table('regional_manager_profiles')
    op.drop_table('branches')
    op.drop_table('audit_logs')
    op.drop_table('users')
    op.drop_table('regions')
    # ### end Alembic commands ###
